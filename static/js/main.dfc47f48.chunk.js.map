{"version":3,"sources":["types.ts","pages/LandingPage.tsx","config/checklists.ts","redux/stateSlice.ts","redux/hooks.ts","components/ChecklistItem.tsx","components/ChecklistRenderer.tsx","pages/DailiesPage.tsx","pages/WeekliesPage.tsx","components/Header.tsx","config/sampleData.ts","components/Dialog/AddCharacterDialog.tsx","components/Dialog/BaseDialog.tsx","components/Dialog/useDialog.tsx","components/CharacterCard.tsx","components/CharacterList.tsx","redux/store.ts","pages/ShiftPage.tsx","components/AppRouter.tsx","App.tsx","index.tsx"],"names":["Class","LandingPage","to","checklist","stateSlice","createSlice","name","initialState","dailyChecklist","shiftChecklist","weeklyBosses","characters","characterIndex","reducers","updateChecklist","state","action","payload","updateCharList","addChar","push","console","log","current","localStorage","setItem","JSON","stringify","updateChecklistItem","type","field","setCharIndex","storage","parse","getItem","isEmpty","resetDailyChecklists","forEach","character","dailyList","resetWeeklyChecklists","weeklyList","actions","useAppDispatch","useDispatch","useAppSelector","useSelector","ChecklistItem","value","useState","checked","setChecked","dispatch","useEffect","className","onChange","e","target","ChecklistRenderer","Object","entries","map","key","DailiesPage","WeekliesPage","Header","src","alt","width","sampleCharacterList","class","pirate","level","magician","StyledForm","styled","div","AddPictureDialog","setDialogOpen","setIsLoading","setIsError","setErrorMsg","setName","job","setJob","setLevel","maxLength","keys","max","min","parseInt","onClick","StyledContainer","StyledDialog","StyledHeader","BaseDialog","header","setHeader","AddCharacterDialog","renderContent","useDialog","dialogOpen","renderDialog","CharacterCard","index","selected","CharacterList","charList","charIndex","loginDate","Date","lastCheckedDate","getHours","getDay","toISOString","checkIfLastVisitedExpired","list","toString","char","store","configureStore","reducer","ShiftPage","AppRouter","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfc47f48.chunk.js","sourcesContent":["interface Checklist {\r\n  [key: string]: boolean;\r\n}\r\ninterface Character {\r\n  name: string;\r\n  class: Class;\r\n  level: number;\r\n}\r\n\r\ninterface FullChecklist {\r\n  dailyChecklist: Checklist;\r\n  weeklyBosses: Checklist;\r\n  shiftChecklist: Checklist;\r\n}\r\n\r\nenum Class {\r\n  magician = \"magician\",\r\n  thief = \"thief\",\r\n  warrior = \"warrior\",\r\n  bowman = \"bowman\",\r\n  pirate = \"pirate\",\r\n}\r\n\r\nexport type { Checklist, Character, FullChecklist };\r\nexport { Class };\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LandingPage = () => {\r\n    return (\r\n        <div>\r\n            <Link to=\"/dailies\">\r\n                Dailies\r\n            </Link>\r\n            <Link to=\"/weeklies\">\r\n                Weeklies\r\n            </Link>\r\n            <Link to=\"/quiche\">\r\n                Quiche\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","const checklist = {\r\n    \"dailyChecklist\": {\r\n        \"Arcane Dailies\": false,\r\n        \"Ursus\": false,\r\n        \"Maple Tour\": false,\r\n        \"Monster Park\": false,\r\n        \"Yu Garden\": false,\r\n        \"Gollux\": false,\r\n        \"Legion Quest\": false,\r\n        \"Bosses\": false,\r\n        \"Commerci PQ\": false,\r\n        \"Commerci Solo\": false\r\n    },\r\n    \"shiftChecklist\": {\r\n        \"WAP\": false,\r\n        \"2x\": false,\r\n        \"Legion\": false,\r\n        \"Familiars\": false,\r\n        \"Drop/Meso Gear\": false,\r\n        \"Wild Totem\": false,\r\n        \"Additional EXP Shit\": false,\r\n        \"Link Skill Review\": false,\r\n        \"Legion Board Review\": false,\r\n        \"Pets\": false\r\n    },\r\n    \"weeklyBosses\": {\r\n        \"HMag\": false,\r\n        \"CZak\": false,\r\n        \"HHila\": false,\r\n        \"CBean\": false,\r\n        \"CRA\": false,\r\n        \"CPap\": false,\r\n        \"Princess No\": false,\r\n        \"Akechi\": false,\r\n        \"Lotus\": false,\r\n        \"Damien\": false,\r\n        \"Lucid\": false,\r\n        \"VHila\": false\r\n    }\r\n}\r\n\r\nexport default checklist;","import { createSlice, current, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport checklist from \"config/checklists\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { Character, FullChecklist } from \"types\";\r\nimport { RootState } from \"./store\";\r\n\r\ninterface IState {\r\n  characters: Array<Character>;\r\n  characterIndex: number;\r\n  checklist: FullChecklist;\r\n}\r\n\r\ninterface checklistUpdateData {\r\n  field: string;\r\n  type: \"weeklyBosses\" | \"dailyChecklist\" | \"shiftChecklist\";\r\n}\r\n\r\nconst initialState: IState = {\r\n  checklist: {\r\n    dailyChecklist: {},\r\n    shiftChecklist: {},\r\n    weeklyBosses: {},\r\n  },\r\n  characters: [],\r\n  characterIndex: 0,\r\n}\r\n\r\nexport const stateSlice = createSlice({\r\n  name: \"state\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    updateChecklist: (state, action: PayloadAction<FullChecklist>) => {\r\n      state.checklist = action.payload;\r\n    },\r\n    updateCharList: (state, action: PayloadAction<Array<Character>>) => {\r\n      state.characters = action.payload;\r\n    },\r\n    addChar: (state, action: PayloadAction<Character>) => {\r\n      state.characters.push(action.payload);\r\n      console.log(current(state).characters);\r\n      localStorage.setItem(\"characters\", JSON.stringify(current(state).characters));\r\n    },\r\n    updateChecklistItem: (state, action: PayloadAction<checklistUpdateData>) => {\r\n      state.checklist[action.payload.type][action.payload.field] = !state.checklist[action.payload.type][action.payload.field];\r\n      localStorage.setItem(state.characters[state.characterIndex].name, JSON.stringify(current(state).checklist));\r\n    },\r\n    setCharIndex: (state, action: PayloadAction<number>) => {\r\n      const storage = JSON.parse(\r\n        //@ts-ignore\r\n        localStorage.getItem(state.characters[action.payload].name)\r\n      );\r\n      if (!isEmpty(storage)) {\r\n        state.checklist = storage;\r\n        console.log(current(state).checklist)\r\n      } else {\r\n        localStorage.setItem(state.characters[action.payload].name, JSON.stringify(checklist));\r\n        state.checklist = checklist;\r\n      }\r\n      state.characterIndex = action.payload;\r\n    },\r\n    resetDailyChecklists: (state) => {\r\n      state.characters.forEach((character) => {\r\n        const dailyList = checklist.dailyChecklist;\r\n        localStorage.setItem(character.name, JSON.stringify({ ...checklist, dailyChecklist: dailyList }))\r\n      })\r\n    },\r\n    resetWeeklyChecklists: (state) => {\r\n      state.characters.forEach((character) => {\r\n        const weeklyList = checklist.weeklyBosses;\r\n        const dailyList = checklist.dailyChecklist;\r\n        localStorage.setItem(character.name, JSON.stringify({ ...checklist, weeklyBosses: weeklyList, dailyChecklist: dailyList }))\r\n      })\r\n    }\r\n  },\r\n});\r\n\r\nexport const {\r\n  updateChecklist,\r\n  setCharIndex,\r\n  updateCharList,\r\n  addChar,\r\n  updateChecklistItem,\r\n  resetDailyChecklists,\r\n  resetWeeklyChecklists\r\n} = stateSlice.actions;\r\n\r\nexport const selectChecklist = (state: RootState) => state.checklist;\r\nexport const selectCharacters = (state: RootState) => state.characters;\r\nexport const selectCharacterIndex = (state: RootState) => state.characterIndex;\r\n\r\nexport default stateSlice.reducer;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport { RootState, AppDispatch } from './store'\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import React, { useEffect, useState } from 'react'\r\nimport { updateChecklistItem } from 'redux/stateSlice';\r\nimport { useAppDispatch } from 'redux/hooks';\r\ninterface ChecklistItemProps {\r\n    field: string;\r\n    value: boolean;\r\n}\r\n\r\nconst ChecklistItem: React.FC<ChecklistItemProps> = ({ field, value }) => {\r\n    const [checked, setChecked] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        setChecked(value);\r\n    }, [value])\r\n    return (\r\n        <div key={field}>\r\n            <label className=\"inline-flex items-center h-8 cursor-pointer\">\r\n            <input type=\"checkbox\" className=\"rounded text-pink-500\" checked={checked} onChange={(e) => {\r\n                setChecked(e.target.checked);\r\n                dispatch(updateChecklistItem({field, type: \"dailyChecklist\"}));\r\n            }} />\r\n            <span className=\"ml-2\">{field}</span>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChecklistItem\r\n","import React from 'react';\r\nimport { Checklist } from 'types';\r\nimport ChecklistItem from 'components/ChecklistItem';\r\n\r\ninterface ChecklistProps {\r\n    checklist: Checklist;\r\n}\r\n\r\nconst ChecklistRenderer: React.FC<ChecklistProps> = ({ checklist }) => {\r\n    return (\r\n        <div className=\"container w-full flex flex-col text-lg\">\r\n            {\r\n                Object.entries(checklist).map(([field, value]) => {\r\n                    return (\r\n                        <ChecklistItem {...{field,value}} key={field}></ChecklistItem>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChecklistRenderer\r\n","import React from 'react'\r\nimport ChecklistRenderer from 'components/ChecklistRenderer';\r\nimport {useAppSelector, useAppDispatch} from 'redux/hooks';\r\n\r\nconst DailiesPage = () => {\r\n    const { dailyChecklist } = useAppSelector(state=>state.checklist);\r\n\r\n    return (\r\n        <div>\r\n            <ChecklistRenderer checklist={dailyChecklist}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DailiesPage\r\n","import React from 'react'\r\nimport ChecklistRenderer from 'components/ChecklistRenderer';\r\nimport { useAppSelector } from 'redux/hooks';\r\n\r\nconst WeekliesPage = () => {\r\n    const {weeklyBosses} = useAppSelector(state=>state.checklist);\r\n    return (\r\n        <div>\r\n             <ChecklistRenderer checklist={weeklyBosses}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeekliesPage\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"sticky top-0 z-40 h-14 px-36 flex-1 min-w-full flex items-center container bg-purple-500 text-white\">\r\n            <img src=\"/maplestory-icon.png\" alt=\"Icon\" width={32}>\r\n\r\n            </img>\r\n            <p className=\"text-xl\">\r\n                Maplelist\r\n            </p>\r\n            <Link to=\"/dailies\" className=\"bg-purple-500 hover:bg-purple-700 text-white px-3 py-2 rounded-md text-lg ml-20\">\r\n                Dailies\r\n            </Link>\r\n            <Link to=\"/weeklies\" className=\"bg-purple-500 hover:bg-purple-700 text-white px-3 py-2 rounded-md text-lg ml-5\">\r\n                Weeklies\r\n            </Link>\r\n            <Link to=\"/quiche\" className=\"bg-purple-500 hover:bg-purple-700 text-white px-3 py-2 rounded-md text-lg ml-5\">\r\n                Quiche\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { Character, Class } from \"types\";\r\n\r\nconst sampleCharacterList : Array<Character> = [{\r\n    name: \"Victor\",\r\n    class: Class.pirate,\r\n    level: 210,\r\n},\r\n{\r\n    name: \"SuperKilla\",\r\n    class: Class.magician,\r\n    level: 210,\r\n}]\r\n\r\nexport default sampleCharacterList;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Class } from 'types';\r\nimport { addChar } from 'redux/stateSlice';\r\nimport { useAppDispatch } from 'redux/hooks';\r\n\r\ninterface DialogProps {\r\n    setDialogOpen: (arg: boolean) => void;\r\n    setIsLoading: (arg: boolean) => void;\r\n    setIsError: (arg: boolean) => void;\r\n    setErrorMsg: (arg: string) => void;\r\n}\r\n\r\nconst StyledForm = styled.div`\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column; \r\n    width: 60%;\r\n    left: 50%;\r\n    transform: translate(-50%, 0%);\r\n`;\r\n\r\nconst AddPictureDialog: React.FC<DialogProps> = ({ setDialogOpen, setIsLoading, setIsError, setErrorMsg }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [job, setJob] = useState<Class>(Class.magician);\r\n    const [level, setLevel] = useState(0);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <StyledForm>\r\n            <label className=\"block\">\r\n                <span>Name</span>\r\n                <input type=\"text\" maxLength={12} onChange={(e) => { setName(e.target!.value) }} className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"></input>\r\n            </label>\r\n            <label className=\"block\">\r\n                <span>Class</span>\r\n                <select onChange={(e) => { setJob(Class[e.target!.value! as keyof typeof Class]) }} className=\"block w-full mt-1 rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\r\n                    {\r\n                        Object.keys(Class).map((value) => {\r\n                            return (<option>{value}</option>)\r\n                        })\r\n                    }\r\n                </select>\r\n            </label>\r\n            <label className=\"block\">\r\n                <span>Number</span>\r\n                <input type=\"number\" max={300} min={0} onChange={(e) => {\r\n                    const value = parseInt(e.target.value);\r\n                    if (value > 300 || value < 0) {\r\n                        setLevel(0);\r\n                    } else {\r\n                        setLevel(value);\r\n                    }\r\n                    \r\n                }} value={level} className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n            </label>\r\n            <button onClick={() => {\r\n                dispatch(addChar({ name, level, class: job }))\r\n            }}\r\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full my-5\">\r\n                Add\r\n            </button>\r\n        </StyledForm>\r\n    )\r\n}\r\n\r\nexport default AddPictureDialog\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport AddCharacterDialog from './AddCharacterDialog';\r\n\r\ninterface DialogProps {\r\n    setDialogOpen: (arg: boolean) => void;\r\n    type: string;\r\n}\r\n\r\nconst StyledContainer = styled.div`\r\n    position: fixed;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: rgb(0,0,0,0.7);\r\n    z-index: 3;\r\n    top: 0;\r\n    left: 0;\r\n    \r\n`;\r\n\r\nconst StyledDialog = styled.div`\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    transform: translate(-50%, -50%);\r\n    background-image: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\r\n    min-width: 400px;\r\n    max-width: 100%; \r\n    min-height: 400px;\r\n    border-radius: 8px;\r\n    border: 1px solid black;\r\n`;\r\n\r\nconst StyledHeader = styled.div`\r\n    border-radius: 5px 5px 0 0;\r\n    padding-left: 5px;\r\n    text-align: center;\r\n    font-size: 28px;\r\n    font-family: Montserrat;\r\n    padding: 1rem;\r\n`;\r\n\r\nconst BaseDialog: React.FC<DialogProps> = ({ setDialogOpen, type }) => {\r\n    const [header, setHeader] = useState(\"Dialog\");\r\n    const [isError, setIsError] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        switch (type) {\r\n            case \"addCharacter\":\r\n                setHeader(\"Add Character\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [type])\r\n\r\n    const renderContent = () => {\r\n        switch (type) {\r\n            case \"addCharacter\":\r\n                return <AddCharacterDialog setDialogOpen={setDialogOpen} setIsError={setIsError} setErrorMsg={setErrorMsg} setIsLoading={setIsLoading}/>\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <StyledDialog>\r\n                <StyledHeader>{header}</StyledHeader>\r\n                    <img onClick={() => setDialogOpen(false)} src=\"/exit.svg\" className=\"absolute top-0 right-0 h-4 w-4 m-3 hover:bg-blue-200\" alt=\"exit\"/>\r\n                {renderContent()}\r\n            </StyledDialog>\r\n        </StyledContainer>\r\n    )\r\n}\r\n\r\nexport default BaseDialog\r\n","import React, { useState } from 'react';\r\nimport BaseDialog from 'components/Dialog/BaseDialog';\r\n\r\nconst useDialog = () => {\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const renderDialog = (type: string) => {\r\n        return dialogOpen && <BaseDialog setDialogOpen={setDialogOpen} type={type}></BaseDialog>\r\n    }\r\n\r\n    return (\r\n        {\r\n            setDialogOpen, renderDialog, dialogOpen\r\n        }\r\n    )\r\n}\r\n\r\nexport default useDialog\r\n","import React from 'react'\r\nimport { useAppDispatch } from 'redux/hooks';\r\nimport { setCharIndex } from 'redux/stateSlice';\r\nimport { Class } from 'types'\r\ninterface CharacterProps {\r\n    name: string;\r\n    className: Class;\r\n    level: number;\r\n    index: number;\r\n    selected?: boolean;\r\n}\r\n\r\n\r\nconst CharacterCard: React.FC<CharacterProps> = ({ className, level, name, index, selected }) => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <div className={`cursor-pointer border-blue-400 border rounded-lg flex items-center ${selected ? \"text-white bg-blue-400\" : \"\"}`} onClick={() => dispatch(setCharIndex(index))}>\r\n            <img className=\" w-12 h-12 m-2 rounded-full ring-1 blue-500\" src={`/${Class[className]}.svg`} alt={`${Class[className]}`} />\r\n            <div className=\"pr-2\">\r\n                <p>{name}</p>\r\n                <p>{level}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterCard\r\n","import React, { useEffect } from 'react';\r\nimport { setCharIndex, updateCharList, resetDailyChecklists, resetWeeklyChecklists } from 'redux/stateSlice';\r\nimport { useAppSelector, useAppDispatch } from 'redux/hooks';\r\nimport { isEmpty } from 'lodash';\r\nimport sampleCharacterList from 'config/sampleData';\r\nimport useDialog from 'components/Dialog/useDialog';\r\nimport CharacterCard from './CharacterCard';\r\n\r\nconst CharacterList: React.FC = () => {\r\n    const charList = useAppSelector(state => state.characters);\r\n    const charIndex = useAppSelector(state => state.characterIndex);\r\n    const dispatch = useAppDispatch();\r\n    const { renderDialog, setDialogOpen, dialogOpen } = useDialog();\r\n\r\n    const checkIfLastVisitedExpired = () => {\r\n        const loginDate = new Date();\r\n        const lastCheckedDate = localStorage.getItem(\"lastVisited\");\r\n        console.log(loginDate.getHours());\r\n        //if its daily expiry\r\n        if (lastCheckedDate && loginDate.getHours() > 19 && new Date(lastCheckedDate) < loginDate && new Date(lastCheckedDate).getHours() < 19) {\r\n            console.log(\"Daily check passed\");\r\n            //check if its weekly expired\r\n            if (loginDate.getDay() === 0) {\r\n                console.log(\"week check passed\");\r\n                dispatch(resetWeeklyChecklists());\r\n            }else{\r\n                console.log(\"weeklycheck failed\")\r\n                dispatch(resetDailyChecklists());\r\n            }\r\n        }else{\r\n            dispatch(resetDailyChecklists());\r\n        }\r\n        localStorage.setItem(\"lastVisited\", loginDate.toISOString());\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkIfLastVisitedExpired();\r\n        const list = localStorage.getItem(\"characters\");\r\n        if (isEmpty(list)) {\r\n            localStorage.setItem('characters', JSON.stringify(sampleCharacterList));\r\n        } else {\r\n            dispatch(updateCharList(JSON.parse(list!.toString())))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"grid grid-rows-1 grid-cols-2\">\r\n            {renderDialog(\"addCharacter\")}\r\n            <div className=\"flex items-center py-5 gap-x-4\">\r\n                {charList && charList.map((char, index) => (\r\n                    <CharacterCard {...{ index, name: char.name, className: char.class, level: char.level, selected: index === charIndex }} key={char.name}/>\r\n                ))}\r\n            </div>\r\n\r\n            <button onClick={() => { setDialogOpen(!dialogOpen) }} className=\"col-start-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full my-5 w-40 place-self-end self-start\">\r\n                Add Character\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterList\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport stateSlice from 'redux/stateSlice'\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: stateSlice\r\n})\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport default store;\r\n","import ChecklistRenderer from 'components/ChecklistRenderer';\r\nimport React from 'react'\r\nimport { useAppSelector } from 'redux/hooks';\r\n\r\nconst ShiftPage = () => {\r\n    const { shiftChecklist } = useAppSelector(state=>state.checklist);\r\n    return (\r\n        <div>\r\n            <ChecklistRenderer checklist={shiftChecklist}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShiftPage\r\n","import LandingPage from 'pages/LandingPage';\r\nimport React from 'react'\r\nimport DailiesPage from 'pages/DailiesPage';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport WeekliesPage from 'pages/WeekliesPage';\r\nimport Header from 'components/Header';\r\nimport CharacterList from 'components/CharacterList';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'redux/store';\r\nimport ShiftPage from 'pages/ShiftPage';\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n                <Router>\r\n                    <Header />\r\n                    <div className=\"lg:z-50 max-w-8xl px-36 container min-w-full h-screen\">\r\n                        <CharacterList />\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <LandingPage />\r\n                            </Route>\r\n                            <Route exact path=\"/dailies\">\r\n                                <DailiesPage />\r\n                            </Route>\r\n                            <Route exact path=\"/weeklies\">\r\n                                <WeekliesPage />\r\n                            </Route>\r\n                            <Route exact path=\"/quiche\">\r\n                                <ShiftPage />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\nexport default AppRouter;\r\n","import AppRouter from \"components/AppRouter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <AppRouter/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from 'App';\r\nimport 'styles/base.css';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}